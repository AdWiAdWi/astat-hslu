x <- c(4, 6, 8, 10)
y <- c(2.3, 4.1, 5.7, 6.9)
model <- lm(x ~ y)
summary(model)
SSE <- sum(model$residuals^2)
SSE
cor(x,y)
# Aufgabe 5.5
x <- 2:12
p <- c(1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1) / 36
# Erwartungswert
E <- sum(x*p)
E
# Varianz
V <- sum((x-E)^2*p)
V
# Standardabweichung
Sd <- sqrt(V)
Sd
1 - pnorm(q=185, mean=180, sd=7.4)
# zwischen 1.70m und 1.80m
pnorm(q=180, mean=180, sd=7.4) - pnorm(170, 180, 7.4)
# b - oberes und unters Quartil gesucht
qnorm(p=c(0.25, 0.75), mean=180, sd=7.8)
# c - oberstes 5% gesucht
qnorm(p=0.95, mean=180, sd=7.4)
# weniger als 2.5kg ist
pnorm(q=2.5, mean=4, sd=1.25)
# mehr als 5kg
1 - pnorm(q=5, mean=4, sd=1.25)
# b
pnorm(q=4.5, mean=4, sd=1.25)-pnorm(q=3, mean=4, sd=1.25)
# c - oberste 2% gesucht
qnorm(p=0.98, mean=4, sd=1.25)
pnorm(q=10, mean=8.2, sd=1)
pnorm(q=10, mean=8.2, sd=1) - pnorm(5, 8.2,1)
1-pnorm(20,8.2,1)
1-pnorm(3.1,2.2,0.0009)
pnorm(q=82, mean=77, sd=9) - pnorm(72, 77,9)
pnorm(q=82, mean=77, sd=3.515625) - pnorm(72, 77,3.515625)
pnorm(q=82, mean=77, sd=225/sqrt(64)) - pnorm(72, 77,225/sqrt(64))
pnorm(q=82, mean=77, sd=15/sqrt(64)) - pnorm(72, 77,15/sqrt(64))
pnorm(q=82, mean=77, sd=sqrt(255/64)) - pnorm(72, 77,15/sqrt(64))
pnorm(q=82, mean=77, sd=sqrt(255/64)) - pnorm(72, 77,sqrt(255/64))
pnorm(q=82, mean=77, sd=sqrt(255/64)) - pnorm(72, 77,sqrt(255/64))
qnorm(p=0.05, mean = 70, sd = 1.5/sqrt(12))
mean(71, 69, 67, 68, 73, 72, 71, 71, 68, 72, 69, 72)
x <- c(71, 69, 67, 68, 73, 72, 71, 71, 68, 72, 69, 72)
mean(x)
t.test(x, mu=70, alternative = "less")
x <- c(46, 48, 52, 49, 46, 51, 52, 47, 49, 44, 48, 51, 49, 50, 53,
47)
x <- c(46, 48, 52, 49, 46, 51, 52, 47, 49, 44, 48, 51, 49, 50, 53, 47)
pnorm(q = mean(x), mean = 50, sd = 3/sqrt(16))
t.test(x, mu=50, alternative = "less")
# Aufgabe 13.1
library(ISLR)
attach(Carseats)
# a
head(Carseats)
?Carseats
# b
fit <- lm(Sales ~ Price + Urban + US)
summary(fit)
# f
fit_ <- lm(Sales ~ Price + US)
summary(fit_)
# Aufgabe 13.2
library(ISLR)
attach(Auto)
head(Auto)
Auto.1 <- within(Auto, rm(name))
# a
library(leaps)
install.packages("leaps")
# a
library(leaps)
# a
library(leaps)
reg <- regsubsets(mpg ~ ., data = Auto.1, method = "forward", nvmax = 2)
reg.sum <- summary(reg)
reg.sum
reg.sum$which
reg <- regsubsets(mpg ~ ., data = Auto.1, method = "forward")
reg.sum <- summary(reg)
reg.sum
reg.sum$which
# b
reg <- regsubsets(mpg ~ ., data = Auto.1, method = "backward")
reg.sum <- summary(reg)
reg.sum$which
library(crayon)
?add1
?t.test()
# a
setwd("C:/R Workspace/Woche 2")
mannfrau <- read.csv("mannfrau.csv")
head(mannfrau)
# b
alter.mann <- mannfrau[, 1]
alter.frau <- mannfrau[, 3]
boxplot(alter.mann - alter.frau,
col="orange")
# b
alter.mann <- mannfrau[, 1]
alter.frau <- mannfrau[, 3]
boxplot(alter.mann - alter.frau,
col="orange")
# Aufgabe 3.1
setwd("C:/R Workspace/Woche 3")
# Datensatz einlesen
geysir <- read.table("geysir.dat", header = TRUE)
head(geysir)
# 4 Graphiken im Graphikfenster
par(mfrow = c(2,2))
hist(geysir[, "Zeitspanne"])
hist(geysir[, "Zeitspanne"], breaks = 20)
hist(geysir[, "Zeitspanne"], breaks = seq(41, 96, by = 11))
hist(geysir[, "Eruptionsdauer"])
# Aufgabe 3.2
# a
setwd("C:/R Workspace/Woche 2")
mannfrau <- read.csv("mannfrau.csv")
head(mannfrau)
groesse.mann <- mannfrau[, 2]
groesse.frau <- mannfrau[, 4]
plot(groesse.mann, groesse.frau,
xlab = "Grösse Mann",
ylab = "Grösse Frau",
col = "blue",
pch = 16
)
abline(lm(mannfrau$groesse.frau~mannfrau$groesse.mann),
lwd = 3,
col = "seagreen"
)
lm(mannfrau$groesse.frau~mannfrau$groesse.mann)
# a
setwd("C:/R Workspace/Woche 3")
income <- read.table(file="income.dat", header=TRUE)
head(income)
plot(income$AFQT,
income$Income2005,
type = "p",
xlab = "IQ",
ylab = "Einkommen",
col = "lightblue"
)
abline(lm(income$Income2005 ~ income$AFQT),
col = "orange",
lwd = 3)
plot(income$Educ,
income$Income2005,
type = "p",
xlab = "Years of education",
ylab = "Einkommen",
col = "lightblue"
)
abline(lm(income$Income2005 ~ income$Educ),
col = "orange",
lwd = 3)
lm(income$Income2005 ~ income$Educ)
head(anscombe)
par(mfrow=c(2,2))
# b
plot(anscombe$x1, anscombe$y1)
reg <- lm(anscombe$y1 ~ anscombe$x1)
abline(reg)
plot(anscombe$x2, anscombe$y2)
reg <- lm(anscombe$y2 ~ anscombe$x2)
abline(reg)
plot(anscombe$x3, anscombe$y3)
reg <- lm(anscombe$y3 ~ anscombe$x3)
abline(reg)
plot(anscombe$x4, anscombe$y4)
reg <- lm(anscombe$y4 ~ anscombe$x4)
abline(reg)
# c
lm(anscombe$y1 ~ anscombe$x1)
lm(anscombe$y2 ~ anscombe$x2)
lm(anscombe$y3 ~ anscombe$x3)
lm(anscombe$y4 ~ anscombe$x4)
# Datensatz einlesen
geysir <- read.table("geysir.dat", header = TRUE)
# 4 Graphiken im Graphikfenster
par(mfrow = c(2,2))
hist(geysir[, "Zeitspanne"])
hist(geysir[, "Zeitspanne"], breaks = 20)
hist(geysir[, "Zeitspanne"], breaks = seq(41, 96, by = 11))
hist(geysir[, "Eruptionsdauer"])
# -> Aufgabe 4
plot(geysir[, "Zeitspanne"], geysir[, "Eruptionsdauer"],
pch=19,
col="darkseagreen4")
abline(lm(geysir[, "Eruptionsdauer"] ~ geysir[, "Zeitspanne"]),
col="orange")
cor(geysir[, "Zeitspanne"], geysir[, "Eruptionsdauer"])
# Aufgabe 3.2
# a
setwd("C:/R Workspace/Woche 2")
mannfrau <- read.csv("mannfrau.csv")
head(mannfrau)
groesse.mann <- mannfrau[, 2]
groesse.frau <- mannfrau[, 4]
plot(groesse.mann, groesse.frau,
xlab = "Grösse Mann",
ylab = "Grösse Frau",
col = "blue",
pch = 16
)
abline(lm(mannfrau$groesse.frau~mannfrau$groesse.mann),
lwd = 3,
col = "seagreen"
)
# Aufgabe 4 - Correlation
cor(groesse.mann, groesse.frau)
lm(mannfrau$groesse.frau~mannfrau$groesse.mann)
# a
setwd("C:/R Workspace/Woche 3")
income <- read.table(file="income.dat", header=TRUE)
head(income)
plot(income$AFQT,
income$Income2005,
type = "p",
xlab = "IQ",
ylab = "Einkommen",
col = "lightblue"
)
abline(lm(income$Income2005 ~ income$AFQT),
col = "orange",
lwd = 3)
cor(income$AFQT,
income$Income2005
)
plot(income$Educ,
income$Income2005,
type = "p",
xlab = "IQ",
ylab = "Einkommen",
col = "lightblue"
)
abline(lm(income$Income2005 ~ income$Educ),
col = "orange",
lwd = 3)
cor(income$Educ, income$Income2005)
lm(income$Income2005 ~ income$Educ)
head(anscombe)
par(mfrow=c(2,2))
plot(anscombe$x1, anscombe$y1)
reg <- lm(anscombe$y1 ~ anscombe$x1)
abline(reg)
cor(anscombe$x1, anscombe$y1)
plot(anscombe$x2, anscombe$y2)
reg <- lm(anscombe$y2 ~ anscombe$x2)
abline(reg)
cor(anscombe$x2, anscombe$y2)
plot(anscombe$x3, anscombe$y3)
reg <- lm(anscombe$y3 ~ anscombe$x3)
abline(reg)
cor(anscombe$x3, anscombe$y3)
plot(anscombe$x4, anscombe$y4)
reg <- lm(anscombe$y4 ~ anscombe$x4)
abline(reg)
cor(anscombe$x4, anscombe$y4)
# b
lm(anscombe$y1 ~ anscombe$x1)
lm(anscombe$y2 ~ anscombe$x2)
lm(anscombe$y3 ~ anscombe$x3)
lm(anscombe$y4 ~ anscombe$x4)
# a
t.x <- (-10:10)
t.x1 <- 0:10
t.y <- t.x^2
t.y1 <- t.x1^2
# b
par(mfrow=c(1,2))
plot(t.x, t.y, col = "darkseagreen4", pch = 19)
plot(t.x1, t.y1, col = "darkseagreen4", pch = 19)
# c
cor(t.x, t.y)
cor(t.x1, t.y1)
?pnorm
# Aufgabe 8.2
1 - pnorm(q=3.1, mean=2.2, sd=sqrt(0.0009))
# Aufgabe 8.3
# a
pnorm(82, 77, 3) - pnorm(72, 77, 3)
pnorm(70.25, mean=70, sd=1.5/(sqrt(12)))
# Aufgabe 9.1
wine <- c(71, 69, 67, 68, 73, 72, 71, 71, 68, 72, 69, 72)
qnorm(0.05, mean=70, sd=1.5/(sqrt(12)))
mean(wine)
pnorm(70.25, mean=70, sd=1.5/(sqrt(12)))
# a
t.test(wine, mu=70, alternative = "less")
bread <- c(46, 48, 52, 49, 46, 51, 52, 47, 49, 44, 48, 51, 49, 50, 53, 47)
# a
qnorm(0.05, mean=50, sd=3/sqrt(16))
mean(bread)
pnorm(mean(bread), mean=50, sd=3/sqrt(16))
# b
qnorm(0.05, mean=50, sd=3/sqrt(100))
mean(bread)
pnorm(mean(bread), mean=50, sd=3/sqrt(100))
# c
t.test(bread, mu=50, alternative = "less")
# b
x <- c(120, 265, 157, 187, 219, 288, 156, 205, 163)
y <- c(127, 281, 160, 185, 220, 298, 167, 203, 171)
t.test(x, y, paired = T, alternative = "less")
# c
setwd("C:/R Workspace/Woche 10")
jackals <- read.table(file = "jackals.txt", header = TRUE)
jackals
t.test(jackals[, "M"], jackals[, "W"])
# d
wilcox.test(jackals[, "M"], jackals[, "W"])
rind <- c(186, 181, 176, 149, 184, 190, 158, 139, 175, 148, 152, 111,
141, 153, 190, 157, 131, 149, 135, 132)
chicken <- c(129, 132, 102, 106, 94, 102, 87, 99, 170, 113, 135, 142, 86,
143, 152, 146, 144)
# d
mean(rind)
mean(chicken)
# e
wilcox.test(rind, chicken, paired=FALSE)
# a
mdma_zuerich <- c(16.3, 12.7, 14, 53.3, 117, 62.6, 27.6)
mdma_basel <- c(10.4, 8.91, 11.7, 29.9, 46.3, 25, 29.4)
d <- mdma_zuerich - mdma_basel
mean(d)
sd(d)
# d
# gepaart
t.test(mdma_zuerich, mdma_basel, alternative = "greater", paired=TRUE)
# ungepaart
t.test(mdma_zuerich, mdma_basel, alternative = "greater", paired=FALSE)
# Aufgabe 11.1
library(ISLR)
# a
head(Auto)
?Auto
# b
mpg = B_0 + B_1 * horsepower
# Aufgabe 11.1
library(ISLR)
# a
head(Auto)
?Auto
# b
mpg = B_0 + B_1 * horsepower
# c
fit <- lm(Auto$mpg ~ Auto$horsepower)
summary(fit)
confint(fit)
