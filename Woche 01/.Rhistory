x <- c(4, 6, 8, 10)
y <- c(2.3, 4.1, 5.7, 6.9)
model <- lm(x ~ y)
summary(model)
SSE <- sum(model$residuals^2)
SSE
cor(x,y)
# Aufgabe 5.5
x <- 2:12
p <- c(1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1) / 36
# Erwartungswert
E <- sum(x*p)
E
# Varianz
V <- sum((x-E)^2*p)
V
# Standardabweichung
Sd <- sqrt(V)
Sd
1 - pnorm(q=185, mean=180, sd=7.4)
# zwischen 1.70m und 1.80m
pnorm(q=180, mean=180, sd=7.4) - pnorm(170, 180, 7.4)
# b - oberes und unters Quartil gesucht
qnorm(p=c(0.25, 0.75), mean=180, sd=7.8)
# c - oberstes 5% gesucht
qnorm(p=0.95, mean=180, sd=7.4)
# weniger als 2.5kg ist
pnorm(q=2.5, mean=4, sd=1.25)
# mehr als 5kg
1 - pnorm(q=5, mean=4, sd=1.25)
# b
pnorm(q=4.5, mean=4, sd=1.25)-pnorm(q=3, mean=4, sd=1.25)
# c - oberste 2% gesucht
qnorm(p=0.98, mean=4, sd=1.25)
pnorm(q=10, mean=8.2, sd=1)
pnorm(q=10, mean=8.2, sd=1) - pnorm(5, 8.2,1)
1-pnorm(20,8.2,1)
1-pnorm(3.1,2.2,0.0009)
pnorm(q=82, mean=77, sd=9) - pnorm(72, 77,9)
pnorm(q=82, mean=77, sd=3.515625) - pnorm(72, 77,3.515625)
pnorm(q=82, mean=77, sd=225/sqrt(64)) - pnorm(72, 77,225/sqrt(64))
pnorm(q=82, mean=77, sd=15/sqrt(64)) - pnorm(72, 77,15/sqrt(64))
pnorm(q=82, mean=77, sd=sqrt(255/64)) - pnorm(72, 77,15/sqrt(64))
pnorm(q=82, mean=77, sd=sqrt(255/64)) - pnorm(72, 77,sqrt(255/64))
pnorm(q=82, mean=77, sd=sqrt(255/64)) - pnorm(72, 77,sqrt(255/64))
qnorm(p=0.05, mean = 70, sd = 1.5/sqrt(12))
mean(71, 69, 67, 68, 73, 72, 71, 71, 68, 72, 69, 72)
x <- c(71, 69, 67, 68, 73, 72, 71, 71, 68, 72, 69, 72)
mean(x)
t.test(x, mu=70, alternative = "less")
x <- c(46, 48, 52, 49, 46, 51, 52, 47, 49, 44, 48, 51, 49, 50, 53,
47)
x <- c(46, 48, 52, 49, 46, 51, 52, 47, 49, 44, 48, 51, 49, 50, 53, 47)
pnorm(q = mean(x), mean = 50, sd = 3/sqrt(16))
t.test(x, mu=50, alternative = "less")
x <- c(4,2,1,3,3,5,7)
x <- c(4,2,1,3,3,5,7)
x[3]
x[c(1,4)]
length(x)
x+2
sum(x+2)
x <= 3
x[x <= 3]
sort(x)
order(x)
x[4] <- 8
x
f <- c(51.9, 51.8, 51.9, 53)
c <- 5/9(f -32)
c <- 5/9*(f -32)
c
# Aufgabe 1.4
# a)
seq(1,10, by=0.5)
seq(3,10,length.out = 5)
# b)
x <- c(4, 10, 3, NA, NA, 1, 8)
mean(x) #macht keine Sinn
mean(x, na.rm = TRUE)
sort(x)
sort(x, decreasing = TRUE)
sort(x, decreasing = TRUE, na.last = TRUE)
sort(x, decreasing = TRUE, na.last = FALSE)
order(x)
x
# c)
z <- c(4,2,8,9,7,5,2,1)
plot(z)
# type gibt den Linientyp an, lty gibt den Linientyp fÃ¼r durchgezogene Linien vor
plot(z,
type = "l",
col = "blue",
lty = 2,
main = "Haupttitel",
xlab = "Ein paar Zahlen",
ylab = "Andere Zahlen"
)
# abline(a = NULL, b = NULL, h = NULL, v = NULL, reg = NULL, coef = NULL, untf = FALSE, ...)
abline(v = 3, col = "green", lty = 1)
abline(h = 4, col = "red", lty = 3)
abline(a = 1, b = 2, col = "brown", lty = 5) # y = 2x +1
setwd("C:/R Workspace/Woche 1")
data <read.csv("weather.csv")
data <- read.csv("weather.csv")
data[2,3]
data[4,] # Der erste Wert von data[.../...] bezieht sich immer auf die Zeile
data[, c("Luzern", "Zurich")]
data1 <- data[, c("Luzern", "Zurich")]
write.csv(data1, "weather2.csv", row.names = FALSE)
data2 <- read.csv("weather2.csv")
data2
colnames(data)[3]
colnames(data)[2] <- "Genf"
data
